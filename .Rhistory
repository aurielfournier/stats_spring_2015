source('~/.active-rstudio-document', echo=TRUE)
b2 <- quatile(grad, probs=(0:4)/2)
b2 <- quantile(grad, probs=(0:4)/2)
?quantile
grad
plot(grad)
(0:4)/4
b2 <- quantile(grad, probs=(0.25,1))
b2 <- quantile(grad, probs=c(0.25,1))
plot(bt)
plot(b2)
gradcut2 <- cut(grad, breaks=b2, labels=c('low','high'))
b <- quantile(grad, probs=(0:4)/4)
b
b2
b2 <- quantile(grad, probs=c(0,0.25,1))
b2
gradcut2 <- cut(grad, breaks=b2, labels=c('low','high'))
v2 <- tess(image=gradcut2)
qg2 <- quadratcount(bei,tess=v2)
plot(qg2)
plot(bei,add=T)
plot(rhohat(bei,grad))
b2
b3 <- quantile(grad, probs=c(0,.25,.75,1))
gradcut3 <- cut(grad, breaks=b3)
v3 <- tess(image=gradcut3)
qb3 <- quadratcount(bei,tess=v3)
plot(qb3)
plot(bei,add=T)
mqb3 <- ppm(bei ~ qb3)
class(qb2)
qb <- quadratcount(bei, tess=v)
qb2 <- quadratcount(bei,tess=v2)
qb3 <- quadratcount(bei,tess=v3)
class(qb2)
plot(v2)
class(v2)
mv3 <- ppm(bei ~ v3)
mv2 <- ppm(bei ~ v2)
mv2
mv3
library(spatstat)
data(bei)
plot(bei)
elev <- bei.extra$elev
grad <- bei.extra$grad
plot(elev)
plot(grad)
q <- quadratcount(bei, nx=6,ny=3)
plot(bei)
plot(q, add=T)
den <- density.ppp(bei, sigma=70, kernel="gaussian")
plot(den)
plot(bei,add=T)
contour(den)
b <- quantile(grad, probs=(0:4)/4)
b2 <- quantile(grad, probs=c(0,0.25,1))
b3 <- quantile(grad, probs=c(0,.25,.75,1))
gradcut <- cut(grad, breaks=b, labels=c('low','mlow','mhigh','high'))
gradcut2 <- cut(grad, breaks=b2, labels=c('low','high'))
gradcut3 <- cut(grad, breaks=b3)
v <- tess(image=gradcut)
v2 <- tess(image=gradcut2)
v3 <- tess(image=gradcut3)
plot(v)
plot(bei, add=T)
qb <- quadratcount(bei, tess=v)
qb2 <- quadratcount(bei,tess=v2)
qb3 <- quadratcount(bei,tess=v3)
plot(rhohat(bei,grad))
plot(rhohat(bei,elev))
plot(cdf.test(bei,grad,test="ks"))
plot(cdf.test(bei,elev,test="ks"))
null <- ppm(bei)
grd <- ppm(bei ~ grad)
mv3 <- ppm(bei ~ v3)
mv2 <- ppm(bei ~ v2)
elv <- ppm(bei ~ elev)
grd.elv <- ppm(bei ~ elev * grad)
grd_elv <- ppm(bei ~ elev + grad)
aic <- matrix(ncol=2, nrow=5)
aic[,1] <- c("null","grd","mv3","mv2","elv","grd.elv","grd_elv")
aic[,2] <- c(AIC(null),AIC(grd),AIC(mv3),AIC(mv2),AIC(elv),AIC(grd.elv),AIC(grd_elv))
aic
aic[aic[,2]==min(aic[,2]),]
aic <- matrix(ncol=2, nrow=7)
aic[,1] <- c("null","grd","mv3","mv2","elv","grd.elv","grd_elv")
aic[,2] <- c(AIC(null),AIC(grd),AIC(mv3),AIC(mv2),AIC(elv),AIC(grd.elv),AIC(grd_elv))
aic
aic[aic[,2]==min(aic[,2]),]
diagnose.ppm(mv3)
diagnose.ppm(mv3)
v3
gradcut3
plot(v3)
diagnose.ppm(mv3)
pred <- predict(mv3, se=T)
pred <- predict(mv3, se=T)
names(pred)
?predict
library(spatstat)
?predict
pred <- predict(mv3, se=T)
install.packages(c("AICcmodavg", "car", "devtools", "digest", "formatR", "ggplot2", "highr", "htmltools", "httr", "jsonlite", "knitr", "labeling", "lattice", "manipulate", "maps", "maptools", "markdown", "mime", "msm", "mvtnorm", "psych", "RColorBrewer", "Rcpp", "RcppArmadillo", "RCurl", "reshape", "reshape2", "rgdal", "rgeos", "RgoogleMaps", "RJSONIO", "rmarkdown", "roxygen2", "rstudioapi", "scales", "sjPlot", "sp", "splancs", "unmarked", "xtable"))
install.packages(c("AICcmodavg", "car", "devtools", "digest",
)
)
install.packages(c("AICcmodavg", "car", "devtools", "digest", "formatR", "ggplot2", "highr", "htmltools", "httr", "jsonlite", "knitr", "labeling", "lattice", "manipulate", "maps", "maptools", "markdown", "mime", "msm", "mvtnorm", "psych", "RColorBrewer", "Rcpp", "RcppArmadillo", "RCurl", "reshape", "reshape2", "rgdal", "rgeos", "RgoogleMaps", "RJSONIO", "rmarkdown", "roxygen2", "rstudioapi", "scales", "sjPlot", "sp", "splancs", "unmarked", "xtable"))
install.packages(c("AICcmodavg", "car", "devtools", "digest", "formatR", "ggplot2", "highr", "htmltools", "httr", "jsonlite", "knitr", "labeling", "lattice", "manipulate", "maps", "maptools", "markdown", "mime", "msm", "mvtnorm", "psych", "RColorBrewer", "Rcpp", "RcppArmadillo", "RCurl", "reshape", "reshape2", "rgdal", "rgeos", "RgoogleMaps", "RJSONIO", "rmarkdown", "roxygen2", "rstudioapi", "scales", "sjPlot", "sp", "splancs", "unmarked", "xtable"))
dat <- read.csv('2014_waterfowl.csv')
setwd("~/data")
dat <- read.csv('2014_waterfowl.csv')
summary(dat)
unique(dat)
library(spatstat)
data(bei)
plot(bei)
elev <- bei.extra$elev
grad <- bei.extra$grad
plot(elev)
plot(grad)
q <- quadratcount(bei, nx=6,ny=3)
plot(bei)
plot(q, add=T)
den <- density.ppp(bei, sigma=70, kernel="gaussian")
plot(den)
plot(bei,add=T)
contour(den)
b <- quantile(grad, probs=(0:4)/4)
b2 <- quantile(grad, probs=c(0,0.25,1))
b3 <- quantile(grad, probs=c(0,.25,.75,1))
gradcut <- cut(grad, breaks=b, labels=c('low','mlow','mhigh','high'))
gradcut2 <- cut(grad, breaks=b2, labels=c('low','high'))
gradcut3 <- cut(grad, breaks=b3)
v <- tess(image=gradcut)
v2 <- tess(image=gradcut2)
v3 <- tess(image=gradcut3)
plot(v)
plot(bei, add=T)
qb <- quadratcount(bei, tess=v)
qb2 <- quadratcount(bei,tess=v2)
qb3 <- quadratcount(bei,tess=v3)
plot(rhohat(bei,grad))
plot(rhohat(bei,elev))
plot(cdf.test(bei,grad,test="ks"))
plot(cdf.test(bei,elev,test="ks"))
null <- ppm(bei)
grd <- ppm(bei ~ grad)
mv3 <- ppm(bei ~ v3)
mv2 <- ppm(bei ~ v2)
elv <- ppm(bei ~ elev)
grd.elv <- ppm(bei ~ elev * grad)
grd_elv <- ppm(bei ~ elev + grad)
aic <- matrix(ncol=2, nrow=7)
aic[,1] <- c("null","grd","mv3","mv2","elv","grd.elv","grd_elv")
aic[,2] <- c(AIC(null),AIC(grd),AIC(mv3),AIC(mv2),AIC(elv),AIC(grd.elv),AIC(grd_elv))
aic
aic[aic[,2]==min(aic[,2]),]
diagnose.ppm(mv3)
pred <- predict(mv3, se=T)
source('~/.active-rstudio-document', echo=TRUE)
bei.exp.pred
names(bei.exp.pred)
bei.exp.pred <- predict(bei.exp.fit, se = TRUE)
names(bei.exp.pred)
diagnose.ppm(mv3)
diagnose.ppm(mv2)
diagnose.ppm(mv3)
diagnose.ppm(mv2)
diagnose.ppm(grd.elv)
diagnose.ppm(mv2)
diagnose.ppm(mv3)
library(spatstat)
dat <- read.csv("pattern.csv")
p <- ppp(dat$x, dat$y, window=owin(c(0,10),c(0,10)))
plot(p)
lambda <- summary(p)$intensity
q <- quadratcount(p, nx=4,ny=2)
plot(p)
points(p, col="gray")
plot(q, add=T, col="red")
den <- density.ppp(p, sigma=.5, kernel='gaussian')
plot(den)
contour(den)
library(spatstat)
dat <- read.csv("pattern.csv")
p <- ppp(dat$x, dat$y, window=owin(c(0,10),c(0,10)))
plot(p)
lambda <- summary(p)$intensity
q <- quadratcount(p, nx=4,ny=2)
plot(p)
points(p, col="gray")
plot(q, add=T, col="red")
setwd("~/stats_spring_2015")
library(spatstat)
dat <- read.csv("pattern.csv")
p <- ppp(dat$x, dat$y, window=owin(c(0,10),c(0,10)))
plot(p)
lambda <- summary(p)$intensity
q <- quadratcount(p, nx=4,ny=2)
plot(p)
points(p, col="gray")
plot(q, add=T, col="red")
den <- density.ppp(p, sigma=.5, kernel='gaussian')
plot(den)
contour(den)
csr.test <- quadrat.test(p, nx=4, ny=4, method="Chisq")
csr.test
null <- ppm(p)
diagnose.ppm(null)
D.pairwise <- pairdist(p, squared=F, periodic=T)
D.nn <- nndist(p, k=1)
D.esd <- distmap(p)
F.csr <- function(r){1-exp(-lambda*pi*r^2)}
curve(F.csr,0,10)
F.bei <- Fest(p)
G.p <- Gest(p)
K.p <- Kest(p)
L.p <- Lest(p)
plot(allstats(p))
plot(K.p)
plot(Kest(bei))
plot(Lest(bei))
plot(allstats(p))
plot(Lest(bei))
plot(allstats(p))
col <- readOGR(dsn='.', layer='columbus')
library(spdep)
library(rgdal)
col <- readOGR(dsn='.', layer='columbus')
syracuse <- readOGR(dsn=".", layer="Syracuse")  #note that there is no projection information (bad!)
library(spdep)
library(rgdal)
data(columbus)
dat <- columbus
col <- readOGR(dsn='.', layer='columbus')
library(spdep)
library(rgdal)
data(columbus)
dat <- columbus
col <- readOGR(dsn='.', layer='columbus')
col.lm <- lm(Crime ~ INC + HOVAL, data=columbus)
col.lm <- lm(CRIME ~ INC + HOVAL, data=columbus)
summary(col.lm)
summyar(col.lm)
col.wq <- nb2listw(poly2nb(columbus, queen=T),style="W")
?nb2listw
?poly2nb
col.wq <- nb2listw(poly2nb(col, queen=T),style="W")
moran.plot(col.lm$residuals, listw=col.wq)
ssplot(col, zcol='CRIME')
?ssplot
library(sp)
ssplot(col, zcol='CRIME')
spplot(col, zcol='CRIME')
spplot(col, zcol='CRIME')
col
col[[46]]
plot(col)
summary(col)
?columbus
col.wb <- nb2listw(poly2nb(col, queen=T),style="B")
col.rw <- nb2listw(poly2nb(col, queen=F),style="W")
col.rb <- nb2listw(poly2nb(col, queen=F),style="B")
moran.plot(col.lm$residuals, listw=col.qb)
col.qb <- nb2listw(poly2nb(col, queen=T),style="B")
col.rw <- nb2listw(poly2nb(col, queen=F),style="W")
col.rb <- nb2listw(poly2nb(col, queen=F),style="B")
moran.plot(col.lm$residuals, listw=col.qb)
qb <- lm.morantest(col.lm, col.qb, zero.policy=NULL, alternative="greater", spChk=NULL, resfun=weighted.residuals)
rw <- lm.morantest(col.lm, col.rw, zero.policy=NULL, alternative="greater", spChk=NULL, resfun=weighted.residuals)
rb <- lm.morantest(col.lm, col.rb, zero.policy=NULL, alternative="greater", spChk=NULL, resfun=weighted.residuals)
qb
rw
rb
AIC(rb)
plot(rb)
names(rb)
plot(rb$statistic)
plot(rb$alternative)
qb
rw
rb
col.qb
col.rw
col.rb
head(columbus)
?columbus
lm(INC ~ HOVAL, data=columbus)
summary(lm(INC~HOVAL, data=columbus))
columbus@data[,'residuals'] <- col.lm$residuals
col@data[,'residuals'] <- col.lm$residuals
spplot(col, zcol='residuals')
col$residuals
col[30,]
col[31,]
summary(col)
col$residuals
col[7,]
col[30,]
summary(col)
?columbus
spplot(col, zcol="OPEN")
spplot(col, zcol="HOVAL")
spplot(col, zcol="PLUMB")
13*24
